var jackpotSettings = {
    "jackpot-elem1": {
        currentValue: 0,
        isRed: false,
        details: {
            winner: "test",
            amount: "1002€"
        }
    },
    "jackpot-elem2": {
        currentValue: 0,
        isRed: true,
        details: {
            winner: "test",
            amount: "100€"
        }
    },
    "jackpot-elem3": {
        currentValue: 0,
        isRed: false,
        details: {
            winner: "test",
            amount: "100€"
        }
    }
};
var jackpotSettings = {
    "jackpot-elem1": {
        currentValue: 1,
        isRed: false,
        details: {
            bigger_win: {
                amount: 100,
                date: "11-11-2019"
            },
            number_of_wins: 1,
            last_winner: {
                amount: 100,
                date: "11-11-2019",
                username: "test"
            }
        }
    },
    "jackpot-elem2": {
        currentValue: 10,
        isRed: true,
        details: {
            bigger_win: {
                amount: 100,
                date: "11-11-2019"
            },
            number_of_wins: 1,
            last_winner: {
                amount: 100,
                date: "11-11-2019",
                username: "test"
            }
        }
    },
    "jackpot-elem3": {
        currentValue: 100,
        isRed: false,
        details: {
            bigger_win: {
                amount: 100,
                date: "11-11-2019"
            },
            number_of_wins: 1,
            last_winner: {
                amount: 100,
                date: "11-11-2019",
                username: "test"
            }
        }
    }
};
$(document).ready(function() {
    window.setInterval(function() {
        jackpotCall()
    }, 10000);
    window.setInterval(function() {
        updateSession()
    }, 50000)
});
let jpRequest = false;
//jackpotCall();

function jackpotCall() {
    if (jpRequest) {
        return
    }
    jpRequest = true;
    var a = API_URL;
    a = "api/jp.php?uhash=" + userHash;
    $.ajax({
        type: "POST",
        url: a,
        headers: {
            Authorization: "Bearer " + token,
            "X-localization": lang
        },
        statusCode: {
            202: function(b) {
                jpRequest = false;
                window.location.href = "http://www.youtube.com"
            },
            501: function() {
                jpRequest = false
            },
            429: function(b) {
                jpRequest = false;
                alertify.error(ERROR + " Too Many Requests", "success", 5)
            },
            200: function(b) {
                jpRequest = false;
                $(".fullpage").hide();
                jackpotSettings = {
                    "jackpot-elem1": {
                        currentValue: b.jackpot[0].currentValue,
                        isRed: b.jackpot[0].isRed,
                        details: {
                            winner: b.jackpot2.lvl3_last_winner_date,
                            amount: b.jackpot2.lvl3_last_winner_credits,
                            date: b.jackpot2.lvl3_big_winner_date,
                            bw_amount: b.jackpot2.lvl3_big_winner_credits,
                            number_of_wins: b.jackpot2.lvl3_total,
                            last_winner_date: b.jackpot2.lvl3_last_winner_date,
                            last_winner_username: b.jackpot2.lvl3_last_winner_username,
                            last_winner_amount: b.jackpot2.lvl3_last_winner_credits
                        }
                    },
                    "jackpot-elem2": {
                        currentValue: b.jackpot[1].currentValue,
                        isRed: b.jackpot[1].isRed,
                        details: {
                            winner: b.jackpot2.lvl4_last_winner_date,
                            amount: b.jackpot2.lvl4_last_winner_credits,
                            date: b.jackpot2.lvl4_big_winner_date,
                            bw_amount: b.jackpot2.lvl4_big_winner_credits,
                            number_of_wins: b.jackpot2.lvl4_total,
                            last_winner_date: b.jackpot2.lvl4_last_winner_date,
                            last_winner_username: b.jackpot2.lvl4_last_winner_username,
                            last_winner_amount: b.jackpot2.lvl4_last_winner_credits
                        }
                    },
                    "jackpot-elem3": {
                        currentValue: b.jackpot[2].currentValue,
                        isRed: b.jackpot[2].isRed,
                        details: {
                            winner: b.jackpot2.lvl5_last_winner_date,
                            amount: b.jackpot2.lvl5_last_winner_credits,
                            date: b.jackpot2.lvl5_big_winner_date,
                            bw_amount: b.jackpot2.lvl5_big_winner_credits,
                            number_of_wins: b.jackpot2.lvl5_total,
                            last_winner_date: b.jackpot2.lvl5_last_winner_date,
                            last_winner_username: b.jackpot2.lvl5_last_winner_username,
                            last_winner_amount: b.jackpot2.lvl5_last_winner_credits
                        }
                    }
                };
                $("#user-username").html(b.user.username);
                $("#user-balance").html(b.user.credits);
                $("#hiddenScore").val(b.user.credits);
                $("#ticket-form-balance").val(b.user.credits);
                $("#user-cashback").html(b.user.bonus)
            }
        }
    })
}

function CloseGame() {
    $("#game-window-modal").modal("toggle")
}
var pushersocket = null;

function a_reConnect() {
    a_connect(host, port, userHash)
}
a_reConnect();

function a_connect(c, a, b) {
    var d = wss + "://" + c + ":" + a + "/pusher";
    try {
        if (pushersocket == null) {
            pushersocket = new WebSocket(d), pushersocket.onopen = function() {
                pushersocket.send("A/u90," + b)
            }, pushersocket.onmessage = function(h) {
                if (callBack(h.data.split(",")[1]), 0 === h.data.lastIndexOf("77", 0)) {
                    var i = h.data.split(","),
                        j = i[2];
                    showJackpotWin(j);
                    window.setTimeout(function() {
                        updateBombaCredits()
                    }, 13000)
                }
                if (h.data == 11 || h.data == "00") {
                    if (esciframe == 1) {
                        if (empty(afterlogout)) {
                            afterlogout = "youtube.com"
                        }
                        var g = "http://" + afterlogout;
                        window.location.href = g
                    } else {
                        var g = url + "/browser/index2.php?pusher=" + c + "&port=" + a + "&backurl=" + back + "&uhash=" + b;
                        window.location.href = g
                    }
                }
                if (h.data.lastIndexOf("3", 0) === 0) {
                    updateBombaCredits();
                    refreshGameCredit(h.data)
                }
                if (callBack(h.data.split(",")[1]), 0 === h.data.lastIndexOf("88", 0)) {
                    showBonusMsg(h.data.split(",")[1]);
                    window.setTimeout(function() {
                        updateBombaCredits()
                    }, 5000)
                }
            }, pushersocket.onclose = function() {
                setTimeout(a_reConnect, 3000), pushersocket = null
            }
        }
    } catch (f) {}
}

function empty(a) {
    return !(!!a ? typeof a === "object" ? Array.isArray(a) ? !!a.length : !!Object.keys(a).length : true : false)
}

function showJackpotWin(d) {
    if (screen.width <= 699) {
        var c = "../img/sounds/jackpotintro.mp3"
    } else {
        var c = "../img/sounds/jackpotintro.ogg"
    }
    $("#jpdiv").fadeIn();
    var b = 100;
    var h = 20;
    var g = 10;
    for (var a = 0; a < (g + 1); a++) {
        $("#jpinner").animate({
            top: ((a % 2 == 0 ? h : h * -1))
        }, b)
    }
    $("#jpwin").text(d), setTimeout(hideJackpotWin, 12000);
    var f = new Audio(c);
    f.play()
}

function hideJackpotWin() {
    $("#jpdiv").slideUp()
}

function showBonusMsg(a) {
    if (screen.width <= 699) {
        var b = "../img/sounds/bonus.mp3"
    } else {
        var b = "../img/sounds/bonus.ogg"
    }
    callBack("bonuswin");
    $("#bonusamount").html("+" + a);
    $("#bonusdiv").fadeIn(), $("#bonusinner").effect("bounce", {
        times: 3
    }, 1000), setTimeout(hideBonusMsg, 4000);
    var c = new Audio(b);
    c.play()
}

function callBack(a) {
    if (typeof cscallback != "undefined") {
        cscallback.sendMessage(a)
    }
}

function hideBonusMsg() {
    $("#bonusdiv").slideUp();
    $("#bonusamount").html("")
}

function updateBombaCredits() {}

function refreshGameCredit(e) {
    var h = document.getElementById("game-window-modal-iframe");
    var a = h.contentDocument || h.contentWindow.document;
    callBack('{"cmd":"credupd","data":"' + e + '"}');
    if (h != null) {
        var g = document.getElementById("game-window-modal-iframe");
        if (g != null) {
            var d = g.contentDocument || g.contentWindow.document;
            var b = d.getElementById("game_content");
            if (b != null) {
                try {
                    g.contentWindow.refreshGameCredit()
                } catch (f) {}
            } else {}
            var c = d.getElementById("gameiframe");
            if (c != null) {
                try {
                    c.contentWindow.postMessage(["reloadBalance", "0"], "*")
                } catch (f) {}
            }
        }
    }
}
$(document).ready(function() {
    $("#ticket_button").on("click", function() {
        $("#ticket-modal").modal("toggle")
    });
    $("#ticket-print-button").on("click", function() {
        $("#ticket-modal").modal("hide");
        console.log("<-ticket->")
    });
    $(".selectpicker").on("changed.bs.select", function(f, d, c, a) {
        var b = "en";
        if (d == 0) {
            b = "en"
        }
        if (d == 1) {
            b = "it"
        }
        if (d == 2) {
            b = "es"
        }
        location.replace(b)
    });
    $("#game-window-modal-fullscreen").click(function() {
        $("#game-modal-content").css("height", "100%");
        $("#game-modal-content").css("width", "100%");
        $("#game-window-modal-frame").css("height", "95vh");
        setTimeout(function() {
            $("#game-window-modal-fullscreen").hide()
        }, 1000)
    })
});

function updateSession() {
    url = "update/session";
    $.ajax({
        type: "GET",
        url: url,
        statusCode: {
            202: function(a) {},
            501: function() {},
            429: function(a) {},
            200: function(a) {}
        }
    })
}
document.addEventListener("fullscreenchange", exitHandler);
document.addEventListener("webkitfullscreenchange", exitHandler);
document.addEventListener("mozfullscreenchange", exitHandler);
document.addEventListener("MSFullscreenChange", exitHandler);

function exitHandler() {
    if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {
        $("#game-window-modal-frame").css("height", "65vh");
        $("#game-window-modal-fullscreen").show()
    }
}
$("#getHelp").click(function() {
    var a = API_URL;
    a = a + "terminals/user/help";
    var b = {
        userhash: userHash
    };
    $.ajax({
        type: "POST",
        url: a,
        data: b,
        headers: {
            Authorization: "Bearer " + token,
            "X-localization": lang
        },
        statusCode: {
            202: function(d) {
                var c = d.data.bonus_percentage;
                var f = d.data.happy_hour_perc;
                if (c > 0) {
                    $("#bonus1").removeClass("d-none");
                    $("#perBonus").html(c + "%");
                    $("#perBonus2").html(c + "%")
                }
                if (f > 0) {
                    var e = "";
                    if (d.data.happy_hour_mon) {
                        e = e + "Mon: " + d.data.happy_hour_mon + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    if (d.data.happy_hour_tue) {
                        e = e + "Tue: " + d.data.happy_hour_tue + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    if (d.data.happy_hour_wed) {
                        e = e + "Wed: " + d.data.happy_hour_wed + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    if (d.data.happy_hour_thu) {
                        e = e + "Thu: " + d.data.happy_hour_thu + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    if (d.data.happy_hour_fri) {
                        e = e + "Fri: " + d.data.happy_hour_fri + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    if (d.data.happy_hour_sat) {
                        e = e + "Sat: " + d.data.happy_hour_sat + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    if (d.data.happy_hour_sun) {
                        e = e + "Sun: " + d.data.happy_hour_sun + "<br>";
                        $("#bonus2").removeClass("d-none")
                    }
                    $("#dates").html(e);
                    $("#hp_bonus").html(d.data.happy_hour_perc + "%");
                    $("#hp_bonus2").html(d.data.happy_hour_perc + "%")
                }
            },
            501: function() {},
            429: function(c) {
                jpRequest = false;
                alertify.error(ERROR + " Too Many Requests", "success", 5)
            },
            200: function(c) {}
        }
    })
});
